#!/usr/bin/env bash
#
# Uses sed and cpp to get nng.h into a form cffi can swallow.
# removes #includes,

# Better safe than sorry
set -eu -o pipefail

prefix="${prefix:-nng}"
tmpfile="${tmpfile:-nng_api.h.tmp}"
outfile="${outfile:-nng_api.h}"

echo "// THIS FILE WAS AUTOMATICALLY GENERATED BY $0" > "${tmpfile}"
process_header() {
    # remove includes; otherwise cpp chokes
    sed '/^#include/d' "$1" | \
    # cpp, since cffi can't do includes
    cpp | \
    # Strip all preprocessor directives
    sed 's/^#.*$//g' | \
    # remove blank lines
    sed '/^$/d' | \
    # remove NNG_DECL since we don't need it
    sed 's/^NNG_DECL *//g'
}

process_header "${prefix}/include/nng/nng.h" >> "${tmpfile}"
process_header "${prefix}/include/nng/protocol/bus0/bus.h" >> "${tmpfile}"
process_header "${prefix}/include/nng/protocol/pair0/pair.h" >> "${tmpfile}"
process_header "${prefix}/include/nng/protocol/pair1/pair.h" >> "${tmpfile}"
process_header "${prefix}/include/nng/protocol/pipeline0/push.h" >> "${tmpfile}"
process_header "${prefix}/include/nng/protocol/pipeline0/pull.h" >> "${tmpfile}"
process_header "${prefix}/include/nng/protocol/pubsub0/pub.h" >> "${tmpfile}"
process_header "${prefix}/include/nng/protocol/pubsub0/sub.h" >> "${tmpfile}"
process_header "${prefix}/include/nng/protocol/reqrep0/req.h" >> "${tmpfile}"
process_header "${prefix}/include/nng/protocol/reqrep0/rep.h" >> "${tmpfile}"
process_header "${prefix}/include/nng/protocol/survey0/survey.h" >> "${tmpfile}"
process_header "${prefix}/include/nng/protocol/survey0/respond.h" >> "${tmpfile}"
# nng_tls_config_{pass,key} have only stub implementations, and are
# undefined when building with mbedtls. so we explicitly exclude them
process_header "${prefix}/include/nng/supplemental/tls/tls.h" | egrep -v "nng_tls_config_(pass|key)" >> "${tmpfile}"
process_header "${prefix}/include/nng/transport/tls/tls.h" >> "${tmpfile}"

grep '^#define NNG_FLAG' "${prefix}/include/nng/nng.h" >> "${tmpfile}"
grep '^#define NNG_.*_VERSION' "${prefix}/include/nng/nng.h" >> "${tmpfile}"

cmp -s "${outfile}" "${tmpfile}" && rm "${tmpfile}" || mv "${tmpfile}" "${outfile}"
